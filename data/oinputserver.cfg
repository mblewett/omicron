config:
{
	serverPort = "28000";
	
	// VRPN Controller device for CalVR
	vrpnTrackerName = "Navigation";
	vrpnTrackerPort = 3894;
	
	checkForDisconnectedClients = true;
	
	showEventStream = false;
	
	services:
	{
		/*// OSCService to Supercollider testing
		OSCService:
		{
			serverIP = "localhost";
			serverPort = 8000;
		};
		
		LegacyNetService:
		{
			serverIP = "172.17.148.7";
			msgPort = 7340;
			dataPort = 7000;
		};
		
		
		NetService:
		{
			serverIP = "131.193.76.121";
			msgPort = 27000;
			dataPort = 7134;
		};
		
		PQService:
		{
			serverIP = "127.0.0.1";
			maxBlobSize = 1001;
		
			#If set to 1,1 output will be normalized
			#If commented out or 0,0 PQlabs server resolution will be used
			screenX = 1;
			screenY = 1;
			
			useGestureManager = true;
		};
		*/
		/*
		SagePointerService:
		{
			debug = true;
		};
		*/
		/*
		ThinkGearService:
		{
			updateInterval = 1.0;
			comPortName = "\\\\.\\COM5";
			enableStreamLog = false;
			enableDataLog = false;
		};
		*/
		/*
		MSKinectService:
		{
			checkInterval = 2.0;
			seatedMode = false;
			debug = false;
			
			// Generates a head and wand mocap event similar to the CAVE2 tracker
			// Will not accurately track orientation or Z movement
			caveSimulator = false;
			
			// Speech recognition
			speechGrammerFilePath = "C:/Workspace/EVL/Kinect/Samples v2.0/SpeechBasics-D2D/SpeechBasics-D2D.grxml";
		};
		
		GestureService:
		{
			// -- Two-handed rotation gesture --
			// Hands must be above torso and a certain distance apart to trigger the gesture
			twoHandedRotateGestureMaxDistance = 0.4; // Max distance in meters hands can to be apart to trigger two-handed rotate gesture
			
			useRadians = false;
		};
		*/
		XInputService:
		{
			updateInterval = 0.05;
			checkControllerInterval = 2.0;
			debug = false;
		};
		
		WandService:
		{
			controllerService = "XInputService";
			controllerSourceId = 0;
			raySourceId = 1;
			debug = false;
			pointer:
			{
				type="cylindrical";
				radius=3.238;
				doorWidth = 36;
				xBias = 0.0278;
				minY = 0.305;
				maxY = 2.625;
			};
		};
		
		WandService1:
		{
			class = "WandService";
			controllerService = "XInputService";
			controllerSourceId = 1;
			raySourceId = 2;
			debug = false;
		};
		
		WandService2:
		{
			class = "WandService";
			controllerService = "XInputService";
			controllerSourceId = 2;
			raySourceId = 3;
			debug = false;
		};
		
		WandService3:
		{
			class = "WandService";
			controllerService = "XInputService";
			controllerSourceId = 3;
			raySourceId = -1;
			debug = false;
		};
		
		VRPNService:
		{
			updateInterval = 0.01;
			serverIP = "cave2tracker.evl.uic.edu"; // This is the IP of all trackable objects below, unless marked otherwise
			trackedObjects:
			{
				Head_Tracker:
				{
					name = "Head_Tracker";
					trackableID = 0;
				};

				WandBatman:
				{
					name = "Wand_Batman";
					trackableID = 1;
				};
				
				WandRobin:
				{
					name = "Wand_Robin";
					trackableID = 2;
				};
				
				Xbox:
				{
					name = "Xbox360";
					trackableID = 3;
				};
				
				OtherHead:
				{
					name = "Head_Tracker2";
					trackableID = 4;
				};
				
			};
		};
		
		/*
		OpenNIService:
		{
			referenceTransform:
			{
			referenceTranslation = [2.3290, -0.1001, 2.3290];
			referenceLinear = [0.000151, 0.000039, 0.001086, -0.000089, 0.001093, -0.000027, -0.001083, -0.000084, 0.000154];
			};
			
			useTrackables = true;
			trackables:
			{
				head:
				{
					userId = 1;
					jointId = 1;
					trackableId = 1;
				};
				leftHand:
				{
					userId = 1;
					jointId = 9;
					trackableId = 2;
				};
				rightHand:
				{
					userId = 1;
					jointId = 15;
					trackableId = 3;
				};
				leftElbow:
				{
					userId = 1;
					jointId = 7;
					trackableId = 4;
				};
				rightElbow:
				{
					userId = 1;
					jointId = 13;
					trackableId = 5;
				};
				torso:
				{
					userId = 1;
					jointId = 3;
					trackableId = 6;
				};
				leftHip:
				{
					userId = 1;
					jointId = 17;
					trackableId = 7;
				};
				leftKnee:
				{
					userId = 1;
					jointId = 18;
					trackableId = 8;
				};
				leftFoot:
				{
					userId = 1;
					jointId = 20;
					trackableId = 9;
				};
				rightHip:
				{
					userId = 1;
					jointId = 21;
					trackableId = 10;
				};
				rightKnee:
				{
					userId = 1;
					jointId = 22;
					trackableId = 11;
				};
				rightFoot:
				{
					userId = 1;
					jointId = 24;
					trackableId = 12;
				};
			};
		};
		*/
	};
};